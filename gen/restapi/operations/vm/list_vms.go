// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ListVmsHandlerFunc turns a function with the right signature into a list vms handler
type ListVmsHandlerFunc func(ListVmsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListVmsHandlerFunc) Handle(params ListVmsParams) middleware.Responder {
	return fn(params)
}

// ListVmsHandler interface for that can handle valid list vms params
type ListVmsHandler interface {
	Handle(ListVmsParams) middleware.Responder
}

// NewListVms creates a new http.Handler for the list vms operation
func NewListVms(ctx *middleware.Context, handler ListVmsHandler) *ListVms {
	return &ListVms{Context: ctx, Handler: handler}
}

/*ListVms swagger:route GET /vms vm listVms

List all virtual machines

*/
type ListVms struct {
	Context *middleware.Context
	Handler ListVmsHandler
}

func (o *ListVms) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewListVmsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
